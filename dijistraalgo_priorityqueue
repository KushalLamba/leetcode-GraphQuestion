 vector<int> dijkstra(int V,vector<vector<pair<int, int>>> &adj, int src) {
        vector<int> result(V,INT_MAX);
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> minheap;
        minheap.push({src,0});
        result[src]=0;
        while(!minheap.empty())
        {
            pair<int,int> front=minheap.top();
            minheap.pop();
            int node=front.first;
            int dist=front.second;
            for(int i=0;i<adj[node].size();i++)
            {
                if(adj[node][i].second+dist<result[adj[node][i].first])
                {
                    result[adj[node][i].first]=adj[node][i].second+dist;
                    minheap.push(adj[node][i]);
                }
            }
        }
        return result;
    }
